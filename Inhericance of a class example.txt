#include<iostream>
using namespace std;

class rectangle
{
    private:
    int len, bre;
    
    public:
    rectangle(int l = 0, int b = 0){
        setlenght(l);
        setbreadth(b);
    }
    void setlenght(int l);
    void setbreadth(int b);
    int getlenght(){return len;}
    int getbreadth(){return bre;}
    int area();
    int perimeter();
}; 
void rectangle :: setlenght(int l){
    len = l;
}
void rectangle :: setbreadth(int b){
    bre = b;
}
// int rectangle :: getlenght(){ //this is not working and i dont know why 
//     return len;
// }
// int rectangle :: getbreadth(){
//     return bre;
// }
int rectangle :: area(){
    return len * bre;
}
int rectangle :: perimeter(){
    return 2 * (len + bre);
}
//inheritance example--------------
class cube : public rectangle
{
    private:
    int height;

    public:
    cube(int l = 0, int b = 0, int h = 0){
        setlenght(l);
        setbreadth(b);
        setheight(h);
    }
    void setheight(int h);
    int getheight(){return height;}
    int volume();
    int surface();
};
void cube :: setheight(int h){
    height = h;
}
// int cube :: getheight(){
//     return height;
// }
int cube :: volume(){
    return getlenght() * getbreadth() * height;
}
int cube :: surface(){
    return 2 * (getheight() * height + getbreadth() * height + getlenght() * getbreadth());
}
int main(){
    // rectangle r;
    // r.setlenght(10);
    // r.setbreadth(5);
    // cout<<r.area()<<endl;
    // cout<<r.perimeter()<<endl;
    // cout<<r.getlenght()<<endl;

    cube c;
    c.setbreadth(5);
    c.setlenght(10);
    c.setheight(2);
    cout<<c.volume()<<endl; 
    cout<<c.getlenght()<<endl;
    cout<<c.getheight()<<endl;
    cout<<c.surface();
    return 0;
}



